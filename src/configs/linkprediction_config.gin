import graph_world.models.basic_gnn

GeneratorBeamHandlerWrapper.handler = @LinkPredictionBeamHandler()
GeneratorBeamHandlerWrapper.nsamples = 2000

LinkPredictionBeamHandler.training_ratio = 0.6
LinkPredictionBeamHandler.tuning_ratio = 0.2
LinkPredictionBeamHandler.num_tuning_rounds = 32
LinkPredictionBeamHandler.tuning_metric = "test_rocauc"
LinkPredictionBeamHandler.param_sampler_specs = [
  @nvertex/ParamSamplerSpec(),
  @avg_degree/ParamSamplerSpec(),
  @feature_center_distance/ParamSamplerSpec(),
  @feature_dim/ParamSamplerSpec(),
  @edge_center_distance/ParamSamplerSpec(),
  @edge_feature_dim/ParamSamplerSpec(),
  @p_to_q_ratio/ParamSamplerSpec(),
  @num_clusters/ParamSamplerSpec(),
  @cluster_size_slope/ParamSamplerSpec(),
  @power_exponent/ParamSamplerSpec(),
]

nvertex/ParamSamplerSpec.name = "nvertex"
nvertex/ParamSamplerSpec.min_val = 128
nvertex/ParamSamplerSpec.max_val = 512

p_to_q_ratio/ParamSamplerSpec.name = "p_to_q_ratio"
p_to_q_ratio/ParamSamplerSpec.min_val = 1.0
p_to_q_ratio/ParamSamplerSpec.max_val = 10.0

avg_degree/ParamSamplerSpec.name = "avg_degree"
avg_degree/ParamSamplerSpec.min_val = 1.0
avg_degree/ParamSamplerSpec.max_val = 20.0

feature_dim/ParamSamplerSpec.name = "feature_dim"
feature_dim/ParamSamplerSpec.min_val = 16
feature_dim/ParamSamplerSpec.max_val = 16

feature_center_distance/ParamSamplerSpec.name = "feature_center_distance"
feature_center_distance/ParamSamplerSpec.min_val = 0.0
feature_center_distance/ParamSamplerSpec.max_val = 5.0

edge_center_distance/ParamSamplerSpec.name = "edge_center_distance"
edge_center_distance/ParamSamplerSpec.min_val = 2.0
edge_center_distance/ParamSamplerSpec.max_val = 2.0

edge_feature_dim/ParamSamplerSpec.name = "edge_feature_dim"
edge_feature_dim/ParamSamplerSpec.min_val = 2.0
edge_feature_dim/ParamSamplerSpec.max_val = 2.0

num_clusters/ParamSamplerSpec.name = "num_clusters"
num_clusters/ParamSamplerSpec.min_val = 2
num_clusters/ParamSamplerSpec.max_val = 6

cluster_size_slope/ParamSamplerSpec.name = "cluster_size_slope"
cluster_size_slope/ParamSamplerSpec.min_val = 0.0
cluster_size_slope/ParamSamplerSpec.max_val = 0.1

power_exponent/ParamSamplerSpec.name = "power_exponent"
power_exponent/ParamSamplerSpec.min_val = 0.5
power_exponent/ParamSamplerSpec.max_val = 1.0

LinkPredictionBeamHandler.benchmarker_wrappers = [
  @MLP_/LPBenchmark,
  @GCN_/LPBenchmark,
  @GraphSAGE_/LPBenchmark,
  @GIN_/LPBenchmark,
  @GAT_/LPBenchmark,
  @GATv2_/LPBenchmark,
  @ARMA_/LPBenchmark,
  @FiLM_/LPBenchmark,

  @APPNP_/LPBenchmark,
  @SGC_/LPBenchmark,
]

# GCN & GNN hyperparameter ranges
LR = [0.01, 0.001, 0.0001]
HIDDEN_CHANNELS = [4, 8, 16]
NUM_LAYERS = [1, 2, 3, 4]
DROPOUT = [0, 0, 0, 0.3, 0.5, 0.8] # a hack to make dropout equiprobable
EPOCHS = 50
# GNN only
ALPHA = [0.1, 0.2, 0.3]
ITERATIONS = [5, 10, 15]

# GCN setup
GCN_/LPBenchmark.model_class = @GCN
GCN_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GCN_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# GraphSAGE setup
GraphSAGE_/LPBenchmark.model_class = @GraphSAGE
GraphSAGE_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GraphSAGE_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# GIN setup
GIN_/LPBenchmark.model_class = @GIN
GIN_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GIN_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# GAT setup
GAT_/LPBenchmark.model_class = @GAT
GAT_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GAT_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}


# MLP setup
MLP_/LPBenchmark.model_class = @MLP
MLP_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
MLP_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# APPNP setup
APPNP_/LPBenchmark.model_class = @APPNP
APPNP_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
APPNP_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'alpha': %ALPHA,
    'iterations': %ITERATIONS,
    'dropout' : %DROPOUT,
}

# SGC setup
SGC_/LPBenchmark.model_class = @SGC
SGC_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
SGC_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'iterations': %ITERATIONS,
    'dropout' : %DROPOUT,
}

# GATv2 setup
GATv2_/LPBenchmark.model_class = @GATv2
GATv2_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GATv2_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# ARMA setup
ARMA_/LPBenchmark.model_class = @ARMA
ARMA_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
ARMA_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# FiLM setup
FiLM_/LPBenchmark.model_class = @FiLM
FiLM_/LPBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
FiLM_/LPBenchmark.h_params = {
    'in_channels' : 16,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}