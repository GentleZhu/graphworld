import graph_world.models.basic_gnn

GeneratorBeamHandlerWrapper.handler = @SubstructureBeamHandler()
GeneratorBeamHandlerWrapper.nsamples = 1000000
SubstructureBeamHandler.substruct = %Substructure.TAILED_TRIANGLE_GRAPH
SubstructureBeamHandler.scale_labels = True
SubstructureBeamHandler.marginal = True
SubstructureBeamHandler.num_tuning_rounds = 1
SubstructureBeamHandler.tuning_metric = "test_mse_scaled"
SubstructureBeamHandler.tuning_metric_is_loss = True
SubstructureBeamHandler.param_sampler_specs = [
  @num_graphs/ParamSamplerSpec(),
  @num_vertices/ParamSamplerSpec(),
  @edge_prob/ParamSamplerSpec(),
  @train_prob/ParamSamplerSpec(),
  @tuning_prob/ParamSamplerSpec()
]

num_graphs/ParamSamplerSpec.name = "num_graphs"
num_graphs/ParamSamplerSpec.min_val = 100
num_graphs/ParamSamplerSpec.max_val = 500

num_vertices/ParamSamplerSpec.name = "num_vertices"
num_vertices/ParamSamplerSpec.min_val = 5
num_vertices/ParamSamplerSpec.max_val = 30
num_vertices/ParamSamplerSpec.default_val = 10

edge_prob/ParamSamplerSpec.name = "edge_prob"
edge_prob/ParamSamplerSpec.min_val = 0.1
edge_prob/ParamSamplerSpec.max_val = 0.75

train_prob/ParamSamplerSpec.name = "train_prob"
train_prob/ParamSamplerSpec.min_val = 0.2
train_prob/ParamSamplerSpec.max_val = 0.7

tuning_prob/ParamSamplerSpec.name = "tuning_prob"
tuning_prob/ParamSamplerSpec.min_val = 0.2
tuning_prob/ParamSamplerSpec.max_val = 0.2

SubstructureBeamHandler.batch_size = 32
SubstructureBeamHandler.benchmarker_wrappers = [
  @GCN_/NNGraphBenchmark,
  @GraphSAGE_/NNGraphBenchmark,
  @GAT_/NNGraphBenchmark,
  @GATv2_/NNGraphBenchmark,
  @ARMA_/NNGraphBenchmark,
  @FiLM_/NNGraphBenchmark,
  @GIN_/NNGraphBenchmark,
  @LRGraphBenchmark,
  @MLP_/NNGraphBenchmark,
  @APPNP_/NNGraphBenchmark,
  @SGC_/NNGraphBenchmark,
]

# GCN & GNN hyperparameter ranges
LR = [0.01, 0.001, 0.0001]
HIDDEN_CHANNELS = [4, 8, 16]
NUM_LAYERS = [1, 2, 3, 4]
DROPOUT = [0, 0, 0, 0.3, 0.5, 0.8] # a hack to make dropout equiprobable
EPOCHS = 50
# GNN only
ALPHA = [0.1, 0.2, 0.3]
ITERATIONS = [5, 10, 15]

# GCN setup
GCN_/NNGraphBenchmark.model_class = @GCN
GCN_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GCN_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# GraphSAGE setup
GraphSAGE_/NNGraphBenchmark.model_class = @GraphSAGE
GraphSAGE_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GraphSAGE_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
    'root_weight' : False,
}

# GAT setup
GAT_/NNGraphBenchmark.model_class = @GAT
GAT_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GAT_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# GIN setup
GIN_/NNGraphBenchmark.model_class = @GIN
GIN_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GIN_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# MLP setup
MLP_/NNGraphBenchmark.model_class = @MLP
MLP_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
MLP_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# APPNP setup
APPNP_/NNGraphBenchmark.model_class = @APPNP
APPNP_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
APPNP_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'alpha': %ALPHA,
    'iterations': %ITERATIONS,
    'dropout' : %DROPOUT,
}

# SGC setup
SGC_/NNGraphBenchmark.model_class = @SGC
SGC_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
SGC_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'iterations': %ITERATIONS,
    'dropout' : %DROPOUT,
}

# GATv2 setup
GATv2_/NNGraphBenchmark.model_class = @GATv2
GATv2_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
GATv2_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# ARMA setup
ARMA_/NNGraphBenchmark.model_class = @ARMA
ARMA_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
ARMA_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}

# FiLM setup
FiLM_/NNGraphBenchmark.model_class = @FiLM
FiLM_/NNGraphBenchmark.benchmark_params = {
    'epochs' : %EPOCHS,
    'lr': %LR,
}
FiLM_/NNGraphBenchmark.h_params = {
    'in_channels' : 1,
    'hidden_channels' : %HIDDEN_CHANNELS,
    'num_layers' : %NUM_LAYERS,
    'dropout' : %DROPOUT,
}
